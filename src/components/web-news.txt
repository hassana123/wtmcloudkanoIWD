
        {/* Device Type Dropdown */}
        <div className="mb-4">
          <label className="block text-gray-700">Device Type</label>
          <select
            value={deviceType}
            onChange={(e) => setDeviceType(e.target.value.toLowerCase())}
            className="w-full px-3 py-2 bg-white border rounded"
          >
            <option value="all">All</option>
            <option value="android">Android</option>
            <option value="ios">iOS</option>
          </select>
        </div>

        {/* Country Searchable Dropdown */}
        <div className="mb-4 relative">
          <label className="block text-gray-700">Country</label>
          <div className="relative">
            <input
              type="text"
              placeholder="Type to search for a country"
              value={country}
              onChange={(e) => setCountry(e.target.value.toLowerCase())}
              onFocus={() => setShowDropdown(true)} // Show dropdown on focus
              className="w-full capitalize px-3 py-2 bg-white border rounded"
            />
            <button
              type="button"
              onClick={() => setShowDropdown(!showDropdown)} // Toggle dropdown
              className="absolute inset-y-0 right-0 flex items-center px-3 focus:outline-none"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                className={`h-5 w-5 transition-transform ${
                  showDropdown ? "rotate-180" : "rotate-0"
                }`}
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <path
                  fillRule="evenodd"
                  d="M5.23 7.21a.75.75 0 011.06.02L10 10.94l3.71-3.71a.75.75 0 011.08 1.04l-4.25 4.25a.75.75 0 01-1.06 0L5.21 8.27a.75.75 0 01.02-1.06z"
                  clipRule="evenodd"
                />
              </svg>
            </button>
          </div>
          {showDropdown && (
            <ul
              className="absolute  z-10 w-full bg-white border border-gray-300 rounded shadow-lg max-h-40 overflow-auto"
              style={{ top: "100%" }}
            >
              {countries
                .filter((c) =>
                  c.toLowerCase().includes(country.toLowerCase())
                )
                .map((countryName, index) => (
                  <li
                    key={index}
                    onClick={() => {
                      setCountry(countryName);
                      setShowDropdown(false); // Close dropdown on selection
                    }}
                    className="px-3 capitalize py-2 cursor-pointer hover:bg-gray-100"
                  >
                    {countryName}
                  </li>
                ))}
            </ul>
          )}
        </div>
